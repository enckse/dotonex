dotonex configuration (internals)
===

# internals

The following options change the internal management systems within dotonex that attempt
to maintain reliability, recoverability, and outputs. Changing settings in this area of a configuration
should only be done during system debugging.

## nointerrupt

dotonex will receive `SIGINT` and attempt to cleanly quit if received. If nointerrupt
is set to true than this signal handling will be disabled.

## nologs

Logs are buffered internally before being written to disk. If nologs is set to true
then logs are entirely disabled and will not attempt to write to disk.

## logs

The number of seconds, when logging is enabled, to wait between log writing requests.

## lifespan

A dotonex instance, in most cases, should live for less than one day in order to
make sure the instance is full reset and capable of responding. The lifespan (in hours)
will be taken at startup and added to the startup time. Once the current time passes
the allowed lifespan than a lifecycle refresh could be in order depending on the configured
hours in which a lifecycle refresh can happen.

## lifecheck

While the lifespan is often a multi-hour value, the check (also in hour) should be much
more often (lower). With a calculated lifespan this value is used to determine how often
to poll the current time and see if the lifespan has been surpassed (and a lifecycle refresh
should occur). When this value is less than or equal to 0 than lifecycling is disabled.

## lifehours

Once a lifecycle refresh is determined as viable then the runner will wait until
an hour (specified in this array, 0-23 for the hours) found with this configuration
property before lifecycling. This may also be considered a "quiet time" in which
a lifecycle refresh is allowable.

## maxconnections

Once the maximum number of proxied connections is met than the dotonex instance
will automatically refresh itself (recycling) in order to clear out stale connections.

### count

This is the number of _total_ connections that will have to have been received
prior to performing a max connection reset.

### check

This is the time amount between max connection queries (in minutes). If this value
is less than or equal to 0 than the max connection checking is entirely disabled.

## clientfailures

In the situation in which a new client (untracked, new proxy requests) are unable to
broker a connection to the backend service, this will cause a client failure count
to increment. The _consecutive_ amount of client failures can trigger a dotonex
instance refresh.
        
### count

The number of _consecutive_ client failures that must be found to cause a reset.

### check

This is the time amount between client failure queries (in minutes). If this value
is less than or equal to 0 than the max connection checking is entirely disabled.
